Timer unit: 4.28052e-07 s

Total time: 141.549 s
File: simulation.py
Function: run_simulation at line 74

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    74                                               def run_simulation(self, save_to_dot=True, save_to_json=True):
    75                                                   # import Seed and lifetable data
    76                                                   this_generation_population = Population()
    77         1           14     14.0      0.0          next_generation_population = None
    78         1            6      6.0      0.0  
    79                                                   seed_group = seed.load_group(this_generation_population)
    80         1       152089 152089.0      0.0          table_data = loader.load_data()
    81         1        63256  63256.0      0.0          lifetable = table_data.life_table
    82         1            7      7.0      0.0          compability = table_data.competitive_table
    83         1            5      5.0      0.0  
    84                                                   random_module = RandomModule()
    85         1         2855   2855.0      0.0  
    86                                                   # create analytics lists
    87                                                   age_record_list = []
    88         1            6      6.0      0.0          population_record_list = []
    89         1            5      5.0      0.0          male_population_record_list = []
    90         1            5      5.0      0.0          female_population_record_list = []
    91         1            5      5.0      0.0  
    92                                                   real_birth_rate_list = []
    93         1            5      5.0      0.0          real_death_rate_list = []
    94         1            5      5.0      0.0  
    95                                                   edges_per_agent_list = []
    96         1            6      6.0      0.0          adult_males_list = []
    97         1            5      5.0      0.0          adult_females_list = []
    98         1            5      5.0      0.0          adult_females_per_males_list = []
    99         1            5      5.0      0.0  
   100                                                   total_agent_relationships_list = []
   101         1            5      5.0      0.0  
   102                                                   group_composition_list = []
   103         1            5      5.0      0.0  
   104                                                   birth_interval_list = []
   105         1            5      5.0      0.0  
   106                                                   #  relatedness
   107                                           
   108                                           
   109                                                   death_counter = Counter()  # used to make sure the correct number
   110         1           10     10.0      0.0          # of deaths occur
   111                                                   birth_counter = Counter()  # used to make sure the correct number
   112         1            7      7.0      0.0          # of births take place
   113                                           
   114                                                   # assign all_groups by creating several copies of the
   115                                                   # seed generation
   116                                                   for i in range(0, self.NUMBER_OF_SEED_GROUPS + 1):
   117        12           85      7.1      0.0              this_generation_population.add_group(copy.deepcopy(seed_group))
   118        11       388685  35335.0      0.1  
   119                                                   for group in this_generation_population.groups:
   120        12           64      5.3      0.0              group.check_group()
   121        11         4252    386.5      0.0  
   122                                                   total_births = 0
   123         1            5      5.0      0.0          total_deaths = 0
   124         1            5      5.0      0.0  
   125                                                   for i in range(0, self.NUMBER_OF_GENERATIONS):
   126       183         1134      6.2      0.0              self.per_generation_print_out(i)
   127       183         2926     16.0      0.0              # analytics
   128                                                       this_age_record = []
   129       183         1014      5.5      0.0              this_population_record = 0  # quick fix error
   130       183         1029      5.6      0.0              this_male_population_record = 0
   131       183         1013      5.5      0.0              this_female_population_record = 0
   132       183          978      5.3      0.0              # this_edges_per_agent = 0
   133                                                       this_generation_adult_males = 0
   134       183          966      5.3      0.0              this_generation_adult_females = 0
   135       183          993      5.4      0.0              this_generation_group_composition_list = []
   136       183         1056      5.8      0.0  
   137                                                       # both of these refer to the whole population for one year, which is what we want
   138                                                       avail_females = []
   139       183         1049      5.7      0.0              eligible_males = []
   140       183         1521      8.3      0.0              new_generation_population_dict = {}
   141       183         8215     44.9      0.0  
   142                                                       # reset counters
   143                                                       death_counter.reset()
   144       183         1673      9.1      0.0              birth_counter.reset()
   145       183         1292      7.1      0.0  
   146                                                       # make the next gen population a copy of this gen's pop
   147                                                       this_generation_population.generation = i
   148       183         1093      6.0      0.0  
   149                                                       next_generation_population = \
   150                                                           copy.deepcopy(this_generation_population)
   151       183     76739427 419341.1     23.2  
   152                                                       #  FILL ELIGIBLE MALES FROM THE WHOLE POP, DEATH
   153                                                       for x in range(0, len(this_generation_population.groups)):
   154      2184        14272      6.5      0.0                  for agent_index in this_generation_population.groups[x].whole_set:
   155    161703       897358      5.5      0.3                      this_agent = this_generation_population.groups[x].agent_dict[agent_index]
   156    159701      1001535      6.3      0.3                      new_agent = next_generation_population.groups[x].agent_dict[agent_index]
   157    159701      1006766      6.3      0.3  
   158                                                               if self.check_for_death(lifetable=lifetable, this_agent=this_agent, new_agent=new_agent,
   159    159701       971374      6.1      0.3                                              new_generation=next_generation_population.groups[x],
   160    159701       905283      5.7      0.3                                           random_module=random_module, counter=death_counter, avail_females=avail_females,
   161    159701       891327      5.6      0.3                                           eligible_males=eligible_males, population_dict=new_generation_population_dict):
   162    159701      7984241     50.0      2.4                          new_generation_population_dict[agent_index] = new_agent
   163    149698       877760      5.9      0.3  
   164                                                       self.check_followers(new_generation_population_dict)
   165       182       461158   2533.8      0.1  
   166                                                       #  debugging loop
   167                                                       for agent in eligible_males:
   168     13855        75704      5.5      0.0                  assert agent in new_generation_population_dict
   169     13673        76702      5.6      0.0              for agent in avail_females:
   170      2987        16420      5.5      0.0                  assert agent in new_generation_population_dict
   171      2805        15826      5.6      0.0  
   172                                                       # disperse females whose male died naturally this year
   173                                                       if avail_females:
   174       182         1006      5.5      0.0                  dispersal.opportun_takeover(new_generation=new_generation_population_dict,
   175       182         1242      6.8      0.0                                              avail_females=avail_females,
   176       182         1022      5.6      0.0                                              eligible_males=eligible_males,
   177       182          981      5.4      0.0                                              deathcounter=death_counter,
   178       182          982      5.4      0.0                                              population=next_generation_population,
   179       182          993      5.5      0.0                                              recognition_bool=self.recognition)
   180       182     10574228  58100.2      3.2  
   181                                                       avail_females = []
   182       182         1786      9.8      0.0              utilities.consolator( "Opp takeovers 1 done.")
   183       182         1442      7.9      0.0  
   184                                                       # run non-dispersal stuff for each sub_group.
   185                                                       for j in range(0, len(this_generation_population.groups)):
   186      2184        14028      6.4      0.0                  this_generation = this_generation_population.groups[j]
   187      2002        12788      6.4      0.0                  new_generation = next_generation_population.groups[j]
   188      2002        12105      6.0      0.0  
   189                                                           #  within this loop, generation only refers to this group
   190                                           
   191                                                           this_generation_lea_for_fol = []
   192      2002        12157      6.1      0.0                  this_generation_leaders = []
   193      2002        12341      6.2      0.0                  #  these are filled in the check_for_death function
   194                                           
   195                                                           females_to_male = \
   196                                                               this_generation.get_females_to_male()
   197      2002        30418     15.2      0.0  
   198                                                           for agent_index in this_generation.whole_set:
   199    161703       915525      5.7      0.3                      if agent_index in new_generation_population_dict and agent_index in new_generation.agent_dict:
   200    159701       967376      6.1      0.3                          this_agent = \
   201                                                                       this_generation.agent_dict[agent_index]
   202    148627       892500      6.0      0.3                          new_agent = \
   203                                                                       new_generation.agent_dict[agent_index]
   204    148627       879679      5.9      0.3  
   205                                                                   if this_agent.sex == "m":
   206    148627       954763      6.4      0.3                              # check if leaders are still leaders
   207                                                                       self.male_check(this_agent, new_agent, this_generation_leaders, this_generation_lea_for_fol,
   208     61252       362286      5.9      0.1                                              new_generation)
   209     61252       911703     14.9      0.3  
   210                                                                       #  other male checks
   211                                                                   #  these must be separate
   212                                                           utilities.consolator( "Male checks done.")
   213      2002        15852      7.9      0.0  
   214                                                           for agent_index in this_generation.whole_set:
   215    161703       920572      5.7      0.3                      if agent_index in new_generation_population_dict and agent_index in new_generation.agent_dict:
   216    159701       983790      6.2      0.3                          this_agent = \
   217                                                                       this_generation.agent_dict[agent_index]
   218    148557       893859      6.0      0.3                          new_agent = \
   219                                                                       new_generation.agent_dict[agent_index]
   220    148557       884346      6.0      0.3                          #  increment age
   221                                                                   new_generation.promote_agent(new_agent, self)
   222    148557      2614311     17.6      0.8  
   223                                           
   224                                                                   if this_agent.sex == "m":
   225    148557       916996      6.2      0.3                              self.male_choices(this_generation, new_generation, this_agent,
   226     61182       368048      6.0      0.1                                               new_agent, random_module, this_generation_lea_for_fol,
   227     61182       338661      5.5      0.1                                               this_generation_leaders, death_counter, avail_females, eligible_males,
   228     61182       344217      5.6      0.1                                                population_dict=new_generation_population_dict)
   229     61182    195164134   3189.9     59.0  
   230                                                                       for female in this_agent.females:
   231     82820       544439      6.6      0.2                                  female
   232     21638       122167      5.6      0.0  
   233                                                                   if this_agent.sex =="f":
   234    148557       863743      5.8      0.3                              # check for preg
   235                                           
   236                                                                       assert this_agent.getOMUID()
   237     87375       651068      7.5      0.2  
   238                                                                       self.check_for_preg(this_generation, new_generation,
   239     87375       519305      5.9      0.2                                                  this_agent, new_agent, females_to_male, agent_index, lifetable,
   240     87375       488559      5.6      0.1                                                  random_module, birth_counter, male_population_record_list)
   241     87375      1257449     14.4      0.4  
   242                                                                       # check for birth
   243                                                                       self.check_for_birth(this_generation, new_generation,
   244     87375       527410      6.0      0.2                                                   this_agent, new_agent, agent_index, lifetable, random_module,
   245     87375       490352      5.6      0.1                                                   birth_counter, i, birth_interval_list)
   246     87375      2493527     28.5      0.8  
   247                                                                   # check for friendships
   248                                                                   """
   249                                                                   friendships.check_for_friendships(this_agent,
   250                                                                       new_agent, this_generation, new_generation,
   251                                                                       random_module)
   252                                                                   """
   253                                           
   254                                                                   # unique changes
   255                                                                   self.conduct_changes_unique_to_experiment_at_agent(
   256    148557       867102      5.8      0.3                              this_generation_population,
   257    148557       826444      5.6      0.2                              next_generation_population,
   258    148557       829887      5.6      0.3                              this_generation, new_generation, this_agent,
   259    148557       838805      5.6      0.3                              new_agent, females_to_male, lifetable,
   260    148557       834561      5.6      0.3                              random_module, table_data
   261    148557      1219460      8.2      0.4                          )
   262                                           
   263                                                                   # analytics
   264                                                                   # this_edges_per_agent += this_agent.edges()
   265                                           
   266                                                                   this_age_record.append(this_agent.age)
   267    148557       951275      6.4      0.3                          this_population_record += 1
   268    148557       861491      5.8      0.3  
   269                                                                   if (this_agent.index in this_generation.male_set):
   270    148557       936588      6.3      0.3                              this_male_population_record += 1
   271     31382       196493      6.3      0.1                          elif (this_agent.index in this_generation.female_set):
   272    117175       723281      6.2      0.2                              this_female_population_record += 1
   273     65080       379219      5.8      0.1  
   274                                           
   275                                                           this_generation_adult_males += \
   276      2002        11243      5.6      0.0                      len(this_generation.male_set)
   277      2002        12841      6.4      0.0                  this_generation_adult_females += \
   278      2002        11301      5.6      0.0                      len(this_generation.female_set)
   279      2002        12134      6.1      0.0  
   280                                                           this_generation_group_composition_list.append(
   281      2002        11863      5.9      0.0                      len(this_generation.whole_set)
   282      2002        13101      6.5      0.0                  )
   283                                                       utilities.consolator( "Main loop done.")
   284       182         1478      8.1      0.0              if avail_females:
   285       182         1047      5.8      0.0                  dispersal.opportun_takeover(new_generation=new_generation_population_dict,
   286        40          254      6.3      0.0                                              avail_females=avail_females, eligible_males=eligible_males,
   287        40          237      5.9      0.0                                              deathcounter=death_counter, population=next_generation_population,
   288        40          235      5.9      0.0                                              recognition_bool=self.recognition)
   289        40       305186   7629.6      0.1  
   290                                                       avail_females = []
   291       182         1185      6.5      0.0              utilities.consolator( "Second op takeovers done.")
   292       182         1372      7.5      0.0              utilities.consolator('Population: ' + str(this_population_record - death_counter.getCount()))
   293       182         2609     14.3      0.0              if birth_counter.count < 1:
   294       182         1125      6.2      0.0                  utilities.consolator( ('births: 0'))
   295         1            7      7.0      0.0              else:
   296                                                           utilities.consolator( ("births: " + str(birth_counter.count)))
   297       181         1564      8.6      0.0                  total_births += birth_counter.count
   298       181         1173      6.5      0.0              utilities.consolator("deaths: " + str(death_counter.getCount()) + '\n')
   299       182         2074     11.4      0.0              total_deaths += death_counter.getCount()
   300       182         1557      8.6      0.0  
   301                                                       self.conduct_changes_unique_to_experiment_at_gen(
   302       182         1132      6.2      0.0                  this_generation_population, next_generation_population,
   303       182         1096      6.0      0.0                  i, self.NUMBER_OF_GENERATIONS, table_data)
   304       182       254918   1400.6      0.1  
   305                                                       # set the old gen to the new one
   306                                                       this_generation_population = next_generation_population
   307       182         1167      6.4      0.0  
   308                                                       group_composition_list.append(this_generation_group_composition_list)
   309       182         1234      6.8      0.0  
   310                                                       number_of_groups = len(this_generation_population.groups)
   311       182         1142      6.3      0.0  
   312                                                       adult_males_per_group = \
   313                                                           float(this_generation_adult_males) / number_of_groups
   314       182         1490      8.2      0.0              adult_females_per_group = \
   315                                                           float(this_generation_adult_females) / number_of_groups
   316       182         1194      6.6      0.0              adult_males_list.append(adult_males_per_group)
   317       182         1159      6.4      0.0              adult_females_list.append(adult_females_per_group)
   318       182         1153      6.3      0.0  
   319                                                       # handle div by 0 errors in calculating
   320                                                       # females per male
   321                                                       if (adult_males_per_group == 0):
   322       182         1113      6.1      0.0                  adult_females_per_males_list.append(
   323                                                               adult_females_per_group / 1
   324                                                           )
   325                                                       elif (adult_females_per_group == 0):
   326       182         1066      5.9      0.0                  adult_females_per_males_list.append(0)
   327                                                       else:
   328                                                           adult_females_per_males_list.append(
   329       182         1091      6.0      0.0                      float(adult_females_per_group) / float(adult_males_per_group)
   330       182         1382      7.6      0.0                  )
   331                                           
   332                                                       if (save_to_dot):
   333       182         1056      5.8      0.0                  self.save_data_to_dot(this_generation_population.get_dot_string(), i)
   334                                                       if (save_to_json):
   335       182         1035      5.7      0.0                  self.save_data_to_json(this_generation_population.get_json_string(), i)
   336                                           
   337                                                           # average_edges_per_agent =\
   338                                                           # float(this_edges_per_agent)/this_population_record
   339                                                       # edges_per_agent_list.append(average_edges_per_agent)
   340                                                       if (this_population_record != 0):
   341       182         1069      5.9      0.0                  real_death_rate_list.append(
   342       182         1113      6.1      0.0                      float(death_counter.getCount()) / this_population_record)
   343       182         1903     10.5      0.0                  real_birth_rate_list.append(
   344       182         1117      6.1      0.0                      float(birth_counter.getCount()) / this_population_record)
   345       182         1734      9.5      0.0                  age_record_list.append(this_age_record)
   346       182         1239      6.8      0.0                  male_population_record_list.append(this_male_population_record)
   347       182         1118      6.1      0.0                  female_population_record_list.append(
   348       182         1103      6.1      0.0                      this_female_population_record)
   349       182         1119      6.1      0.0              else:
   350                                                           real_death_rate_list.append([])
   351                                                           real_birth_rate_list.append([])
   352                                                           age_record_list.append([])
   353                                                           male_population_record_list.append([])
   354                                                           female_population_record_list.append([])
   355                                                       population_record_list.append(this_population_record)
   356       182         1133      6.2      0.0  
   357                                                       assert (avail_females == [])
   358       182         1131      6.2      0.0              # END OF GENERATION LOOP
   359                                           
   360                                                   #  here add OMUID to every living female
   361                                                   female_OMU_dict = {}
   362                                                   for group in this_generation_population.groups:
   363                                                       for indiv in group.agent_dict:
   364                                                           agent = group.agent_dict[indiv]
   365                                                           if agent.sex == "f" and agent.age >= 5:
   366                                                               female_OMU_dict[agent.index] = [agent.getOMUID(), agent.bandID]
   367                                                   #  so female_OMU_dict is now {agentindex : [OMU, band]}
   368                                           
   369                                                   #  a function for calculating relatedness
   370                                                   related_dict = relatedness.main(self.recognition, female_OMU_dict, self.parentage)
   371                                                   self.withinmean = related_dict["withinmean"]
   372                                                   self.withinsd = related_dict["withinsd"]
   373                                                   self.acrossmean = related_dict["acrossmean"]
   374                                                   self.acrosssd = related_dict["acrosssd"]
   375                                                   self.totalrelmean = related_dict["totalrelmean"]
   376                                                   self.totalrelsd = related_dict["totalrelsd"]
   377                                                   self.acrossOMUwithinbandmean = related_dict["acrossOMUwithinbandmean"]
   378                                                   self.acrossOMUwithinbandsd = related_dict["acrossOMUwithinbandsd"]
   379                                           
   380                                                   self.save_data(population_record_list,
   381                                                                  male_population_record_list,
   382                                                                  female_population_record_list,
   383                                                                  age_record_list,
   384                                                                  real_birth_rate_list,
   385                                                                  real_death_rate_list,
   386                                                                  adult_females_per_males_list,
   387                                                                  group_composition_list,
   388                                                                  adult_males_list,
   389                                                                  adult_females_list,
   390                                                                  birth_interval_list)
   391                                           
   392                                                   utilities.consolator( ('Total births: ' + str(total_births)))
   393                                                   utilities.consolator( ('Total deaths: ' + str(total_deaths)))
   394                                           
   395                                                   if len(birth_interval_list) != 0:
   396                                                       utilities.consolator( ('Avg birth int: ' + str(6 * sum(birth_interval_list) / len(birth_interval_list)) + ' months'))

